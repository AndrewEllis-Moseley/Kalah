{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.scss","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"<div id=\\\"form-container\\\" *ngIf=\\\"!playerConnected\\\">\\n  <div class=\\\"message\\\">Welcome to Kalah</div>\\n  <div class=\\\"player\\\">\\n    <label for=\\\"\\\">Enter Player Name:</label>\\n    <input #playerName type=\\\"text\\\" /><button\\n      (click)=\\\"connect(playerName.value)\\\"\\n    >\\n      Let's Play\\n    </button>\\n  </div>\\n  <div class=\\\"rules\\\">\\n    <h2>The Game</h2>\\n    <p>\\n      Kalah is a two player, turn-based game. It is played with a board\\n      consisting of 12 small holes, two scoring wells and 72 stones. Each player\\n      (P1: North and P2: South) owns the six pits closest to them (numbered 1 to\\n      6) and one scoring house.\\n    </p>\\n    <h2>The Rules:</h2>\\n    <ul>\\n      <li>Start of Play</li>\\n      <p>\\n        The game starts with 6 stones in each of the pit with player 1 going\\n        first.\\n      </p>\\n      <li>The Move</li>\\n      <p>\\n        The player whose turn it is chooses one of the 6 pits they own which is\\n        not empty. The stone from that pit are removed and deposited one by one\\n        into the subsequent pits moving counter clockwise, skipping only the\\n        opponent's scoring house.\\n      </p>\\n\\n      <p>\\n        If the last stone is deposited into the current player's scoring house,\\n        that player must take another turn.\\n      </p>\\n\\n      <p>\\n        If the last stone is deposited into an empty pit owned by the current\\n        player and the pit opposite is not empty, the player captures all of the\\n        stones in the opposite pit plus the capturing stones, which go into the\\n        player's scoring house.\\n      </p>\\n\\n      <p>\\n        The player's turn ends with a capture or when the last stone is\\n        deposited into a pit other than the player's scoring house.\\n      </p>\\n      <li>End Game</li>\\n      <p>\\n        If it is a player's turn and all of his pits are empty, then he has no\\n        legal move and the game ends. All stones which are not in one of the\\n        scoring wells are deposited into the house of the opposing player. The\\n        player whose scoring house contains the most stones is the winner.\\n      </p>\\n    </ul>\\n  </div>\\n</div>\\n\\n<div id=\\\"game-container\\\" *ngIf=\\\"playerConnected\\\">\\n  <div class=\\\"header\\\">Welcome - Game ID: {{ gameId }}</div>\\n  <div class=\\\"player-one-pit-1\\\" (click)=\\\"move(1)\\\">{{ pits[1] }}</div>\\n  <div class=\\\"player-one-pit-0\\\" (click)=\\\"move(0)\\\">{{ pits[0] }}</div>\\n  <div class=\\\"player-one-pit-2\\\" (click)=\\\"move(2)\\\">{{ pits[2] }}</div>\\n  <div class=\\\"player-one-pit-3\\\" (click)=\\\"move(3)\\\">{{ pits[3] }}</div>\\n  <div class=\\\"player-one-pit-4\\\" (click)=\\\"move(4)\\\">{{ pits[4] }}</div>\\n  <div class=\\\"player-one-pit-5\\\" (click)=\\\"move(5)\\\">{{ pits[5] }}</div>\\n  <div class=\\\"player-two-pit-7\\\" (click)=\\\"move(7)\\\">{{ pits[7] }}</div>\\n  <div class=\\\"player-two-pit-8\\\" (click)=\\\"move(8)\\\">{{ pits[8] }}</div>\\n  <div class=\\\"player-two-pit-9\\\" (click)=\\\"move(9)\\\">{{ pits[9] }}</div>\\n  <div class=\\\"player-two-pit-10\\\" (click)=\\\"move(10)\\\">{{ pits[10] }}</div>\\n  <div class=\\\"player-two-pit-11\\\" (click)=\\\"move(11)\\\">{{ pits[11] }}</div>\\n  <div class=\\\"player-two-pit-12\\\" (click)=\\\"move(12)\\\">{{ pits[12] }}</div>\\n  <div class=\\\"player-two-house\\\">{{ pits[13] }}</div>\\n  <div class=\\\"player-one-house\\\">{{ pits[6] }}</div>\\n  <div class=\\\"player-one-area\\\">\\n    <h2>Player One: {{ playerOneName }} - RED</h2>\\n  </div>\\n  <div class=\\\"player-two-area\\\">\\n    <h2>Player Two: {{ playerTwoName }} - GREEN</h2>\\n  </div>\\n  <div class=\\\"status\\\">Status: {{ status }}</div>\\n</div>\\n\"","module.exports = \".hidden {\\n  display: none; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvRDpcXFByb2dyYW1taW5nXFxiYWNrYmFzZVxca2FsYWhcXGZyb250ZW5kL3NyY1xcYXBwXFxhcHAuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxhQUFhLEVBQUEiLCJmaWxlIjoic3JjL2FwcC9hcHAuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuaGlkZGVuIHtcclxuICBkaXNwbGF5OiBub25lO1xyXG59XHJcbiJdfQ== */\"","import { Component } from \"@angular/core\";\nimport * as Stomp from \"stompjs\";\nimport * as SockJS from \"sockjs-client\";\n\n@Component({\n  selector: \"app-root\",\n  templateUrl: \"./app.component.html\",\n  styleUrls: [\"./app.component.scss\"]\n})\nexport class AppComponent {\n  private endpoint = \"/ws-kalah-game\";\n  private title = \"Kalah\";\n  private stompClient;\n  private sessionId = Math.random()\n    .toString(36)\n    .substring(7);\n  private playerOneName: string;\n  private playerTwoName = \"Awaiting Opponent\";\n  private status: String;\n  private gameId: number;\n  public playerConnected = false;\n  public disablePlayerOne = true;\n  public hidePlayerTwo = true;\n  public disablePlayerTwo = true;\n  public pits = null;\n  private bothNamesSet = false;\n\n  constructor() {}\n\n  setConnected(connected) {\n    console.log(\"CONNECTED\", connected);\n  }\n\n  connect(playerName) {\n    let ws = new SockJS(this.endpoint);\n    this.stompClient = Stomp.over(ws);\n    let that = this;\n    this.stompClient.connect({}, function(frame) {\n      that.stompClient.subscribe(\n        `/topic/updateBoard/${that.sessionId}`,\n        view => {\n          that.updateBoard(JSON.parse(view.body));\n        }\n      );\n      that.sendName(playerName);\n    });\n  }\n\n  updateBoard(game) {\n    this.pits = game.board.pits;\n    this.status = game.gameStatus;\n    this.gameId = game.gameId;\n\n    if (!this.bothNamesSet) {\n      let name = JSON.parse(game.players[0].name);\n      this.playerOneName = name.playerName;\n      if (game.players.length > 1) {\n        let name = JSON.parse(game.players[1].name);\n        this.playerTwoName = name.playerName;\n        this.bothNamesSet = true;\n      }\n    }\n  }\n\n  showStatus(message) {\n    this.gameId = message.gameId;\n  }\n\n  sendName(pn) {\n    this.stompClient.send(\n      \"/app/game/\" + this.sessionId,\n      {},\n      JSON.stringify({ playerName: pn })\n    );\n    this.playerConnected = true;\n  }\n\n  move(pit) {\n    this.stompClient.send(\n      `/app/move/${this.sessionId}`,\n      {},\n      JSON.stringify({ gameId: this.gameId, pit: pit })\n    );\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}